"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    inbox(NId: ID @eq): Inbox @find
    inboxes: [Inbox!]! @paginate(type: CONNECTION)

    me: People
        @field(resolver: "App\\GraphQL\\Queries\\Account@profile")
}

type Mutation {
    login(input: LoginInput): AuthPayload
        @field(resolver: "App\\GraphQL\\Mutations\\Auth@login")
}

type People {
    id: ID! @rename(attribute: "PeopleId")
    name: String @rename(attribute: "PeopleName")
    email: String @rename(attribute: "Email")
    username: String @rename(attribute: "PeopleUsername")
    employee_number: String @rename(attribute: "NIP")
    class_rank: String @rename(attribute: "Golongan")
    role: Role @belongsTo
    position: String @rename(attribute: "PeoplePosition")
}

type Role {
    id: ID! @rename(attribute: "RoleId")
    name: String! @rename(attribute: "RoleName")
    desc: String! @rename(attribute: "RoleDesc")
    rolecode: Rolecode @belongsTo
}

type Rolecode {
    id: ID! @rename(attribute: "rolecode_id")
    name: String! @rename(attribute: "rolecode_name")
}

input LoginInput {
    username: String!
    password: String!
}

type AuthPayload {
    message: String
    access_token: String
    token_type: String
    expires_in: Int
}

type Receiver {
    People: [People]
    ReceiverAs: String
    ReceiverDate: String
    Msg: String
}

type Inbox {
    NId: ID!
    NTglReg: DateTime!
    Pengirim: String
    Penerima: [Receiver]
    NamaPengirim: String
    Instansipengirim: String!
    Hal: String!
    UrgensiId: String!
    FileName_fake: String
}


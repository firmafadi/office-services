name: Release to Staging
on:
  push:
    branches:
      - development
  workflow_dispatch:
jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@master
      with:
        service_account_email: ${{ secrets.GCLOUD_EMAIL }}
        service_account_key: ${{ secrets.GCLOUD_CREDENTIALS }}
        export_default_credentials: true
    
    # Configure Docker with Credentials
    - name: Configure Docker
      run: |
        gcloud auth configure-docker asia-southeast2-docker.pkg.dev
      
    # Build the Docker image
    - name: Set version tag
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        file: docker/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_IMAGENAME }}:${{ steps.vars.outputs.sha_short }}

    - name: Deploy to Swarm
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_SSH_HOST_STAGING }}
        username: ${{ secrets.SERVER_SSH_USERNAME_STAGING }}
        key: ${{ secrets.SERVER_SSH_PRIVATEKEY_STAGING }}
        script: |
          docker service update --with-registry-auth --image ${{ secrets.DOCKER_IMAGENAME }}:${{ steps.vars.outputs.sha_short }} ${{ secrets.DOCKER_SERVICE_NAME_STAGING}}
          docker service ls --filter name=${{ secrets.DOCKER_SERVICE_NAME_STAGING}} --format "{{.Image}}"
          docker exec $(docker container ls  | grep ${{ secrets.DOCKER_SERVICE_NAME_STAGING}}| awk '{print $1}') php artisan migrate
